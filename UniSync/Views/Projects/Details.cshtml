@model UniSync.Models.Entity.Project

@{
    ViewData["Title"] = "Project Details";
}

<div class="card border-0 shadow-sm mb-4">
    <div class="card-body p-4">
        <div class="d-flex justify-content-between align-items-center mb-4">
            <h1 class="fw-bold">@Model.Title</h1>
            <div>
                <a asp-action="Edit" asp-route-id="@Model.Id" class="btn btn-outline-primary me-2">
                    <i class="bi bi-pencil me-2"></i>Edit
                </a>
                <a asp-action="Index" class="btn btn-outline-secondary">
                    <i class="bi bi-arrow-left me-2"></i>Back to List
                </a>
            </div>
        </div>

        <div class="row g-4">
            <div class="col-md-8">
                <div class="card mb-4">
                    <div class="card-header bg-transparent">
                        <h5 class="card-title mb-0">Project Information</h5>
                    </div>
                    <div class="card-body">
                        <div class="mb-3">
                            <div class="d-flex mb-2">
                                <span class="text-muted me-2" style="width: 120px;">Subject:</span>
                                <span class="badge bg-secondary">@Model.Subject.Title</span>
                            </div>
                            <div class="d-flex mb-2">
                                <span class="text-muted me-2" style="width: 120px;">Priority:</span>
                                @{
                                    var priorityBadgeClass = Model.Priority switch
                                    {
                                        "Low" => "bg-success",
                                        "Medium" => "bg-warning",
                                        "High" => "bg-danger",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @priorityBadgeClass">@Model.Priority</span>
                            </div>
                            <div class="d-flex mb-2">
                                <span class="text-muted me-2" style="width: 120px;">Status:</span>
                                @{
                                    var statusBadgeClass = Model.Status switch
                                    {
                                        "Not Started" => "bg-secondary",
                                        "In Progress" => "bg-primary",
                                        "On Hold" => "bg-warning",
                                        "Completed" => "bg-success",
                                        _ => "bg-secondary"
                                    };
                                }
                                <span class="badge @statusBadgeClass">@Model.Status</span>
                            </div>
                            <div class="d-flex mb-2">
                                <span class="text-muted me-2" style="width: 120px;">Created:</span>
                                <span>@Model.CreatedAt.ToString("dd.MM.yyyy HH:mm")</span>
                            </div>
                            @if (Model.UpdatedAt.HasValue)
                            {
                                <div class="d-flex mb-2">
                                    <span class="text-muted me-2" style="width: 120px;">Last Updated:</span>
                                    <span>@Model.UpdatedAt.Value.ToString("dd.MM.yyyy HH:mm")</span>
                                </div>
                            }
                            @if (Model.Deadline.HasValue)
                            {
                                <div class="d-flex mb-2">
                                    <span class="text-muted me-2" style="width: 120px;">Deadline:</span>
                                    <span>@Model.Deadline.Value.ToString("dd.MM.yyyy")</span>
                                </div>
                            }
                        </div>

                        <div class="mb-3">
                            <h6 class="fw-bold">Description</h6>
                            <p>@(string.IsNullOrEmpty(Model.Description) ? "No description provided." : Model.Description)</p>
                        </div>
                    </div>
                </div>
            </div>

            <div class="col-md-4">
                <div class="card mb-4">
                    <div class="card-header bg-transparent">
                        <h5 class="card-title mb-0">Progress</h5>
                    </div>
                    <div class="card-body text-center">
                        <div class="display-4 fw-bold mb-3">@Model.Progress%</div>
                        <div class="progress mb-3" style="height: 20px;">
                            <div class="progress-bar @(Model.Progress == 100 ? "bg-success" : "")" role="progressbar" style="width: @Model.Progress%;" aria-valuenow="@Model.Progress" aria-valuemin="0" aria-valuemax="100"></div>
                        </div>
                        <div class="text-muted small">
                            @if (Model.Progress == 0)
                            {
                                <span>Not started yet</span>
                            }
                            else if (Model.Progress == 100)
                            {
                                <span>Project completed!</span>
                            }
                            else if (Model.Progress < 50)
                            {
                                <span>Early stages</span>
                            }
                            else
                            {
                                <span>More than halfway done</span>
                            }
                        </div>
                    </div>
                </div>

                @if (Model.Deadline.HasValue)
                {
                    <div class="card mb-4">
                        <div class="card-header bg-transparent">
                            <h5 class="card-title mb-0">Deadline</h5>
                        </div>
                        <div class="card-body text-center">
                            @{
                                var daysLeft = (Model.Deadline.Value - DateTime.Now).Days;
                                var textClass = daysLeft <= 3 ? "text-danger" : daysLeft <= 7 ? "text-warning" : "text-success";
                            }
                            <div class="display-4 fw-bold @textClass mb-2">@daysLeft</div>
                            <div class="text-muted">days left</div>
                            <div class="mt-3">
                                @if (daysLeft <= 3)
                                {
                                    <div class="alert alert-danger" role="alert">
                                        <i class="bi bi-exclamation-triangle me-2"></i>Deadline is approaching soon!
                                    </div>
                                }
                                else if (daysLeft <= 7)
                                {
                                    <div class="alert alert-warning" role="alert">
                                        <i class="bi bi-clock me-2"></i>Deadline is approaching.
                                    </div>
                                }
                                else
                                {
                                    <div class="alert alert-success" role="alert">
                                        <i class="bi bi-check-circle me-2"></i>You have plenty of time.
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>